//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HostmastersModel", "HostSetHost", "HostSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Hostmasters.DAL.HostSet), "Host", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Hostmasters.DAL.Host))]

#endregion

namespace Hostmasters.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HostmastersModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HostmastersModelContainer object using the connection string found in the 'HostmastersModelContainer' section of the application configuration file.
        /// </summary>
        public HostmastersModelContainer() : base("name=HostmastersModelContainer", "HostmastersModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HostmastersModelContainer object.
        /// </summary>
        public HostmastersModelContainer(string connectionString) : base(connectionString, "HostmastersModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HostmastersModelContainer object.
        /// </summary>
        public HostmastersModelContainer(EntityConnection connection) : base(connection, "HostmastersModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Host> Hosts
        {
            get
            {
                if ((_Hosts == null))
                {
                    _Hosts = base.CreateObjectSet<Host>("Hosts");
                }
                return _Hosts;
            }
        }
        private ObjectSet<Host> _Hosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HostSet> HostSets
        {
            get
            {
                if ((_HostSets == null))
                {
                    _HostSets = base.CreateObjectSet<HostSet>("HostSets");
                }
                return _HostSets;
            }
        }
        private ObjectSet<HostSet> _HostSets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHosts(Host host)
        {
            base.AddObject("Hosts", host);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HostSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHostSets(HostSet hostSet)
        {
            base.AddObject("HostSets", hostSet);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HostmastersModel", Name="Host")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Host : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Host object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hostName">Initial value of the HostName property.</param>
        /// <param name="ipAddress">Initial value of the IpAddress property.</param>
        /// <param name="additionTime">Initial value of the AdditionTime property.</param>
        /// <param name="modificationTime">Initial value of the ModificationTime property.</param>
        public static Host CreateHost(global::System.Int32 id, global::System.String hostName, global::System.String ipAddress, global::System.DateTime additionTime, global::System.DateTime modificationTime)
        {
            Host host = new Host();
            host.Id = id;
            host.HostName = hostName;
            host.IpAddress = ipAddress;
            host.AdditionTime = additionTime;
            host.ModificationTime = modificationTime;
            return host;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HostName
        {
            get
            {
                return _HostName;
            }
            set
            {
                OnHostNameChanging(value);
                ReportPropertyChanging("HostName");
                _HostName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HostName");
                OnHostNameChanged();
            }
        }
        private global::System.String _HostName;
        partial void OnHostNameChanging(global::System.String value);
        partial void OnHostNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IpAddress
        {
            get
            {
                return _IpAddress;
            }
            set
            {
                OnIpAddressChanging(value);
                ReportPropertyChanging("IpAddress");
                _IpAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IpAddress");
                OnIpAddressChanged();
            }
        }
        private global::System.String _IpAddress;
        partial void OnIpAddressChanging(global::System.String value);
        partial void OnIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdditionTime
        {
            get
            {
                return _AdditionTime;
            }
            set
            {
                OnAdditionTimeChanging(value);
                ReportPropertyChanging("AdditionTime");
                _AdditionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionTime");
                OnAdditionTimeChanged();
            }
        }
        private global::System.DateTime _AdditionTime;
        partial void OnAdditionTimeChanging(global::System.DateTime value);
        partial void OnAdditionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModificationTime
        {
            get
            {
                return _ModificationTime;
            }
            set
            {
                OnModificationTimeChanging(value);
                ReportPropertyChanging("ModificationTime");
                _ModificationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModificationTime");
                OnModificationTimeChanged();
            }
        }
        private global::System.DateTime _ModificationTime;
        partial void OnModificationTimeChanging(global::System.DateTime value);
        partial void OnModificationTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HostmastersModel", "HostSetHost", "HostSet")]
        public HostSet HostSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostSet>("HostmastersModel.HostSetHost", "HostSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostSet>("HostmastersModel.HostSetHost", "HostSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HostSet> HostSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostSet>("HostmastersModel.HostSetHost", "HostSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HostSet>("HostmastersModel.HostSetHost", "HostSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HostmastersModel", Name="HostSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HostSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HostSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="additionTime">Initial value of the AdditionTime property.</param>
        /// <param name="modificationTime">Initial value of the ModificationTime property.</param>
        public static HostSet CreateHostSet(global::System.Int32 id, global::System.String name, global::System.Boolean active, global::System.DateTime additionTime, global::System.DateTime modificationTime)
        {
            HostSet hostSet = new HostSet();
            hostSet.Id = id;
            hostSet.Name = name;
            hostSet.Active = active;
            hostSet.AdditionTime = additionTime;
            hostSet.ModificationTime = modificationTime;
            return hostSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdditionTime
        {
            get
            {
                return _AdditionTime;
            }
            set
            {
                OnAdditionTimeChanging(value);
                ReportPropertyChanging("AdditionTime");
                _AdditionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionTime");
                OnAdditionTimeChanged();
            }
        }
        private global::System.DateTime _AdditionTime;
        partial void OnAdditionTimeChanging(global::System.DateTime value);
        partial void OnAdditionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModificationTime
        {
            get
            {
                return _ModificationTime;
            }
            set
            {
                OnModificationTimeChanging(value);
                ReportPropertyChanging("ModificationTime");
                _ModificationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModificationTime");
                OnModificationTimeChanged();
            }
        }
        private global::System.DateTime _ModificationTime;
        partial void OnModificationTimeChanging(global::System.DateTime value);
        partial void OnModificationTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HostmastersModel", "HostSetHost", "Host")]
        public EntityCollection<Host> Hosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Host>("HostmastersModel.HostSetHost", "Host");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Host>("HostmastersModel.HostSetHost", "Host", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
